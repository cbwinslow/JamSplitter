version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/jamsplitter_dev
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    command: >
      bash -c "
        python -m pip install --upgrade pip &&
        pip install -e '.[dev]' &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=jamsplitter_dev
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Add any additional services like Redis, Elasticsearch, etc.

volumes:
  postgres_data:
  redis_data:
