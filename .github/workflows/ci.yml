name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: '3.11'
  PYTHONUNBUFFERED: 1

defaults:
  run:
    shell: bash -l {0}

jobs:
  lint-and-test:
    name: Lint and Test (Python ${{ matrix.python }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python: ['3.11']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}
        cache: 'pip'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          ffmpeg \
          libsm6 \
          libxext6 \
          libgl1-mesa-glx

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade setuptools wheel build
        pip install -e ".[dev]"  # Install package in development mode with dev dependencies

    - name: Lint with flake8
      run: |
        flake8 --max-line-length=88 .

    - name: Run pytest with coverage
      run: |
        pytest --cov=src --cov-report=term-missing --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  build-nvidia-image:
    needs: lint-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build NVIDIA GPU Image
        run: |
          docker buildx build \
            --file Dockerfile.cuda \
            --tag jam-splitter-agent:cuda .


  build-amd-image:
    needs: lint-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build AMD ROCm GPU Image
        run: |
          docker buildx build \
            --file Dockerfile.rocm \
            --tag jam-splitter-agent:rocm .
